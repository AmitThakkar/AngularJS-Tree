{
  "name": "Angularjs Tree",
  "tagline": "",
  "body": "# AngularJS Tree\r\n\r\nThis repository is for creating a <strong>tree</strong> <strong>structure</strong> with <strong>AngularJS</strong>.\r\n\r\nIn this blog we will implement <strong>tree</strong> <strong>structure</strong> with <strong>AngularJS</strong> and resultant <strong>tree</strong> will look like below:\r\n\r\n![tree.png](https://raw.githubusercontent.com/AmitThakkar/AngularJS-Tree/master/images/tree.png)\r\n\r\nAnd ```valid JSON``` for the <strong>tree</strong> is as given below:\r\n\r\n```JSON\r\n[\r\n  {\r\n    \"name\": \"Vegetarian Recipes\",\r\n    \"checked\": false,\r\n    \"children\": [\r\n      {\r\n        \"name\": \"Fruits\",\r\n        \"checked\": false,\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Dry Fruits\",\r\n            \"checked\": false,\r\n            \"children\": [\r\n              {\r\n                \"name\": \"Almond\",\r\n                \"checked\": false\r\n              },\r\n              ...\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Fresh Fruits\",\r\n            \"checked\": false,\r\n            \"children\": [\r\n              {\r\n                \"name\": \"Apple\",\r\n                \"checked\": false\r\n              },\r\n              ...\r\n            ]\r\n          },\r\n          ...\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Soup\",\r\n        \"checked\": false,\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Tomato Soup\",\r\n            \"checked\": false\r\n          },\r\n          ...\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Non-vegetarian Recipes\",\r\n    \"checked\": false\r\n  }\r\n]\r\n```\r\n\r\nLet's see, how I have implemented this? For implementing the <strong>tree</strong>, I have created 2 <strong>directives</strong>.\r\n\r\n1. <strong>nodeTree</strong> : An <strong>isolated</strong> <strong>scope</strong> <strong>directive</strong> which will loop to the all the siblings and add another <strong>directive</strong>(node) for each sibling.\r\n2. <strong>node</strong> : A <strong>directive</strong> which represents a node/element and creates sub <strong>tree</strong> as its children.\r\n\r\n```JavaScript\r\napp.directive('nodeTree', function () {\r\n  return {\r\n    template: '<node ng-repeat=\"node in tree\"></node>',\r\n    replace: true,\r\n    restrict: 'E',\r\n    scope: {\r\n      tree: '=children'\r\n    }\r\n  };\r\n});\r\napp.directive('node', function ($compile) {\r\n  return {\r\n    restrict: 'E',\r\n    replace: true,\r\n    templateUrl: 'partials/node.html', // HTML for a single node.\r\n    link: function (scope, element) {\r\n      /*\r\n       * Here we are checking that if current node has children then compiling/rendering children.\r\n       * */\r\n      if (scope.node && scope.node.children && scope.node.children.length > 0) {\r\n        var childNode = $compile('<ul class=\"tree\" ng-if=\"!node.visibility\"><node-tree children=\"node.children\"></node-tree></ul>')(scope);\r\n        element.append(childNode);\r\n      }\r\n    },\r\n    controller: [\"$scope\", function ($scope) {\r\n      // This function is for just toggle the visibility of children\r\n      $scope.toggleVisibility = function (node) {\r\n        node.visibility = !node.visibility;\r\n      };\r\n      // Here We are marking check/un-check all the nodes. \r\n      $scope.checkNode = function (node) {\r\n        node.checked = !node.checked;\r\n        function checkChildren(c) {\r\n          angular.forEach(c.children, function (c) {\r\n            c.checked = node.checked;\r\n            checkChildren(c);\r\n          });\r\n        }\r\n        checkChildren(node);\r\n      };\r\n    }]\r\n  };\r\n});\r\n```\r\n\r\nFollow Me\r\n---\r\n[Github](https://github.com/AmitThakkar)\r\n\r\n[Twitter](https://twitter.com/amit_thakkar01)\r\n\r\n[LinkedIn](https://in.linkedin.com/in/amitthakkar01)\r\n\r\n[More Blogs By Me](http://amitthakkar.github.io/)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}